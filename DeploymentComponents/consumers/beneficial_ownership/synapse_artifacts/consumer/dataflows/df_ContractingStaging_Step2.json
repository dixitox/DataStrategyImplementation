{
	"name": "df_ContractingStaging_Step2",
	"properties": {
		"folder": {
			"name": "BeneficialOwnership/df_Staging"
		},
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"linkedService": {
						"referenceName": "LS_DataLake",
						"type": "LinkedServiceReference"
					},
					"name": "source1"
				}
			],
			"sinks": [
				{
					"linkedService": {
						"referenceName": "LS_DataLake",
						"type": "LinkedServiceReference"
					},
					"name": "sink1"
				}
			],
			"transformations": [
				{
					"name": "flatten1"
				}
			],
			"scriptLines": [
				"source(output(",
				"          address as string,",
				"          postalCode as string,",
				"          country as string,",
				"          id as string,",
				"          name as string,",
				"          email as string,",
				"          telephone as string,",
				"          url as string,",
				"          roles as string[],",
				"          awards as (CNUUID as string, agenciesURL as string, amendment as (changes as (former_value as string, property as string)[]), amendments as (date as string, description as string, id as string, rationale as string)[], buyer as (contactPoint as (address as (countryName as string, locality as string, postalCode as string, region as string, streetAddress as string), email as string, name as string, telephone as string), id as string, name as string), contractGroup as (relatedCN as string[], totalContractGroupPeriod as (endDate as string, startDate as string), totalContractGroupValue as string), contractPeriod as (durationInDays as string, endDate as string, maxExtentDate as string, startDate as string), costBenefitAnalysis as string, date as timestamp, description as string, descriptionContractor as string, descriptionRenegotiated as string, descriptionServices as string, documents as (datePublished as timestamp, description as string, documentType as string, documentTypeDetails as string, format as string, id as string, language as string, relatedLots as string[], title as string, url as string)[], eTenderProcurementMethod as string, evaluationCriteria as string, exemptionsProvisions as string, futureTransfersToContractor as string, futureTransfersToState as string, id as string, industrialRelationsDetails as (applicableIndustrialInstruments as string, locationOfWork as string, subContractorNames as string), isAtsiOwnedBusiness as string, isRevenueContract as string, items as (additionalClassifications as (description as string, id as string, scheme as string, uri as string)[], attributes as (id as string, name as string, value as string)[], classification as (description as string, id as string, scheme as string, uri as string), deliveryAddress as (locality as string, streetAddress as string), deliveryLocation as (description as string), description as string, id as string, quantity as double, relatedLot as string, subItems as (attributes as (id as string, name as string, value as string)[], description as string, group as string, id as string, quantity as string, unit as (id as string, name as string, value as (amount as string, currency as string)))[], unit as (id as short, name as string, scheme as string, value as (amount as string, currency as string)))[], otherInformation as string, otherKeyElements as string, otherPrivateSector as string, procurementMethod as string, publicSectorComparator as string, publishIntention as string, publishedDate as string, reasons as string, relatedBid as string, relatedLots as string[], relatedRFT as string[], relatedSON as string[], requirementResponses as (id as string, relatedTenderer as (id as string), requirement as (id as string), responder as (id as string, name as string), value as string)[], risk as string, significantGuarantee as string, status as string, statusDetails as string, summaryOfInfo as string, suppliers as (ABNExempt as string, additionalIdentifiers as (id as string, scheme as string)[], id as string, identifier as (id as string, legalName as string, scheme as string), name as string)[], title as string, value as (amount as double, currency as string, totalamount as string), valueDescription as string, weightedValue as (amount as double, currency as string))[],",
				"          tender as (PPstatus as string, RFTAccess as string, additionalProcurementCategories as string[], addressForLodgement as string, amendment as (changes as (former_value as string, property as string)[], date as string, rationale as string), amendments as string, auctionPeriod as (endDate as timestamp, startDate as timestamp), awardCriteria as string, awardCriteriaDetails as string, awardPeriod as (durationInDays as string, endDate as timestamp, maxExtentDate as string, startDate as timestamp), bidOpening as (address as (countryName as string, streetAddress as string), date as string, location as (description as string)), capabilities as string[], clarificationMeetings as (address as (streetAddress as string), date as string, id as string)[], classification as (description as string, id as string, scheme as string), conditionsForParticipation as string, contractPeriod as (durationInDays as string, endDate as timestamp, maxExtentDate as string, startDate as timestamp), contractTerms as (electronicInvoicingPolicy as string, hasElectronicOrdering as boolean, hasElectronicPayment as boolean), coveredBy as string[], coveredProcurement as string, criteria as (classification as (id as string, scheme as string), description as string, id as string, relatesTo as string, requirementGroups as (description as string, id as string, requirements as (dataType as string, expectedValue as boolean, id as string, title as string)[])[], source as string, title as string)[], crossBorderLaw as string, datePublished as string, deliveryLocation as string, deliveryarea as string, description as string, documents as string, eTenderProcurementMethod as string, eTenderStatus as string, eligibilityCriteria as string, enquiries as (answer as string, author as (id as string, name as string), date as timestamp, dateAnswered as timestamp, description as string, id as string, relatedLot as string, title as string)[], enquiriesAddress as (streetAddress as string), enquiryPeriod as (durationInDays as string, endDate as timestamp, maxExtentDate as string, startDate as timestamp), estimatedDateToMarket as string, hasEnquiries as boolean, id as string, inheritanceType as string, items as string, lodgeResponse as string, lots as (attributes as (id as string, name as string, value as string)[], contractPeriod as (endDate as timestamp, startDate as timestamp), description as string, hasOptions as boolean, hasRecurrence as boolean, hasRenewal as boolean, id as string, minValue as (amount as string, currency as string), openContractType as string, simultaneousSupply as string, status as string, statusDetails as string, submissionTerms as (variantPolicy as string), title as string, value as (amount as double, currency as string))[], mainProcurementCategory as string, mainProcurementCategoryDetails as string, minValue as string, multiAgencyAccess as string, multiAgencyAccessType as string, notifiedSuppliers as (id as string, name as string)[], numberOfTenderers as string, plannedProcurementUUID as string, preQualifications as (description as string, title as string)[], procedure as (isAccelerated as boolean), procurementIntention as (category as string, description as string, id as string, procuringEntity as (id as string, name as string), publishedDate as string, rationale as string, startDate as string, status as string, statusDetails as string, title as string, uri as string), procurementMethod as string, procurementMethodDetails as string, procurementMethodRationale as string, procuringEntity as (contactPoint as (email as string, fax as string, mobile as string, name as string, telephone as string, url as string), id as string, identifier as (id as string, scheme as string, uri as string), name as string, roles as string[]), questionnaires as (description as string, title as string)[], relatedCN as string, relatedRFT as string, relatedSON as string, status as string, statusDetails as string, submissionMethod as string, submissionMethodDetails as string, techniques as (hasDynamicPurchasingSystem as boolean, hasElectronicAuction as string, hasFrameworkAgreement as boolean), tenderPeriod as string, tenderType as string, tenderers as string, timeframeDelivery as string, title as string, value as string),",
				"          date as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false,",
				"     format: 'parquet',",
				"     fileSystem: 'staging',",
				"     wildcardPaths:['BeneficialOwnership/OpenData/Contracting/Flattened/Step1']) ~> source1",
				"source1 foldDown(unroll(roles),",
				"     mapColumn(",
				"          address,",
				"          postalCode,",
				"          country,",
				"          id,",
				"          name,",
				"          email,",
				"          telephone,",
				"          url,",
				"          role = roles,",
				"          awards,",
				"          tender_id = tender.id,",
				"          tender_title = tender.title,",
				"          lots = tender.lots,",
				"          date",
				"     ),",
				"     skipDuplicateMapInputs: false,",
				"     skipDuplicateMapOutputs: false) ~> flatten1",
				"flatten1 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     format: 'parquet',",
				"     fileSystem: 'staging',",
				"     folderPath: 'BeneficialOwnership/OpenData/Contracting/Flattened/Step2',",
				"     umask: 0022,",
				"     preCommands: [],",
				"     postCommands: [],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> sink1"
			]
		}
	}
}