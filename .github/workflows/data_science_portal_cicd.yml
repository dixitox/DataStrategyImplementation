# This is a basic workflow to help you get started with Actions

name: dstoolkit-portal-cicd

# Controls when the workflow will run
on:
  # Allows you to run this workflow from another workflow
  workflow_call:
    secrets:
      TENANT_ID:
        required: true
      SUBSCRIPTION_ID:
        required: true
      SERVICE_PRINCIPAL_CLIENT_ID:
        required: true
    inputs:
      environment:
        required: true
        type: string
      envFolderPath:
        required: true
        type: string

permissions:
  id-token: write
  contents: read

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:

  data-science-portal-cicd:

    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    environment:
      name: ${{ inputs.environment }}

    steps:
      - uses: actions/checkout@v3

      # Log into Azure
      - name: OIDC Login to Azure Public Cloud with AzPowershell (enableAzPSSession true)
        uses: azure/login@v1
        with:
          client-id: ${{ secrets.SERVICE_PRINCIPAL_CLIENT_ID }}
          tenant-id: ${{ secrets.TENANT_ID }}
          subscription-id: ${{ secrets.SUBSCRIPTION_ID }}
          enable-AzPSSession: true

      - name: Get Main Variables
        run: |
          $json_data = Get-Content "./DeliveryIP_GitHub/variables/data_science_toolkit/data_science_toolkit_${{ inputs.envFolderPath }}.json" | ConvertFrom-Json -AsHashtable
          foreach ( $item in $json_data.GetEnumerator() )
          {
            if($($item.Value).GetType().Name.ToUpper().Contains("HASHTABLE") -or $($item.Value).GetType().Name.ToUpper().Contains("OBJECT[]")){
              $value = $($item.Value) | ConvertTo-Json -Compress
              "$($item.Name)=$value" >> $env:GITHUB_ENV
            } else {
              "$($item.Name)=$($item.Value)" >> $env:GITHUB_ENV
            }
          }
        shell: pwsh

      - name: Setup Node.js environment
        uses: actions/setup-node@v3.6.0
        with:
          node-version: 16.x

      - name: Intall Yarn and configure timeout
        working-directory:  ${{ github.workspace }}/DeliveryIP_GitHub/dstoolkit/app
        run: |
          npm install --global yarn
          yarn config set network-timeout 600000 -g

      - name: Yarn Install
        working-directory:  ${{ github.workspace }}/DeliveryIP_GitHub/dstoolkit/app
        run: yarn install

      - name: Yarn Build
        working-directory:  ${{ github.workspace }}/DeliveryIP_GitHub/dstoolkit/app
        run: yarn build

      - name: Grab API Keys and Tokens
        uses: azure/powershell@v1
        with:
          inlineScript: |
            # Azure Static Web App Token
            $azswa_token = (az staticwebapp secrets list -n ${{ env.staticWebAppName }} --query properties.apiKey).replace('"','');
            Write-Output "::add-mask::$azswa_token"
            "azswa_token=$azswa_token" >> $env:GITHUB_ENV;

            # Azure Static Web App URL
            $azswa_details = az staticwebapp environment show -n ${{ env.staticWebAppName }} | ConvertFrom-Json 
            $azswa_url = "https://" + $azswa_details.hostname
            "azswa_url=$azswa_url" >> $env:GITHUB_ENV;

            # App Insights Connection string
            $app_insights_details = az resource show -g ${{ env.DataScienceToolkitRgName }} -n ${{ env.webAppInsightsName }} --resource-type "microsoft.insights/components" | ConvertFrom-Json
            $app_insights_cs = $app_insights_details.properties.ConnectionString

            Write-Output "::add-mask::$app_insights_cs"
            "app_insights_cs=$app_insights_cs" >> $env:GITHUB_ENV;

            # App Insights URL
            $app_insights_url = $app_insights_cs.split(';')[1].replace('IngestionEndpoint=','').replace('.com/','.com');
            Write-Output "::add-mask::$app_insights_url"
            "app_insights_url=$app_insights_url" >> $env:GITHUB_ENV;
          azPSVersion: "9.5.0"

      - name: Replace Variables
        uses: azure/powershell@v1
        with:
          inlineScript: |
            $filepaths = (
            "${{ github.workspace }}/DeliveryIP_GitHub/dstoolkit/app/dist/index.html",
            "${{ github.workspace }}/DeliveryIP_GitHub/dstoolkit/app/dist/config.env.js",
            "${{ github.workspace }}/DeliveryIP_GitHub/dstoolkit/app/dist/staticwebapp.config.json",
            "${{ github.workspace }}/DeliveryIP_GitHub/dstoolkit/app/dist/sitemap.txt"
            );

            $variables = @{
            "__environment__" = "${{ inputs.environment }}";
            "__web_title__" = "${{ env.webTitle }}";
            "__api_url__" = "https://${{ env.webAppName }}.azurewebsites.net";
            "__img_url__" = "https://${{ env.webAppStorageName }}.blob.core.windows.net/images";
            "__app_insights_cs__" = "${{ env.app_insights_cs }}";
            "__auth_client_id__" = "${{ env.DataScienceAppClientId }}";
            "__auth_instance__" = "${{ env.authInstance }}";
            "__auth_tenant_id__" = "${{ env.DataScienceAppTenantId }}";
            "__auth_scope__" = "api://${{ env.DataScienceAppClientId }}/api.access";
            "__analytics_report_url__" = "${{ env.analytics_report_url }}";
            "__run_flags__" = '${{ env.run_flags }}';
            "__app_insights_url__" = "${{ env.app_insights_url }}";
            "__web_url__" = "${{ env.azswa_url }}";
            "__deployment_status_refresh_ms__" = "${{ env.deployment_status_refresh_ms }}"
            };

            #Replace Variables in File
            foreach ($file in $filepaths){
                $content = (Get-Content $file);
                foreach ($key in $variables.Keys){
                    $content = $content.Replace($key,$variables[$key]);
                }
                Set-Content -Path $file -Value $content;
            }
          azPSVersion: "9.5.0"

      - name: Switch config
        working-directory:  ${{ github.workspace }}/DeliveryIP_GitHub/dstoolkit/app/dist
        run: |
          rm config.js
          mv config.env.js config.js

      - uses: actions/upload-artifact@v3
        with:
          name: artifact
          path: ${{ github.workspace }}/DeliveryIP_GitHub/dstoolkit/app/dist

      - name: Azure Static Web App Deploy
        uses: Azure/static-web-apps-deploy@v1
        with:
          action: "upload"
          app_location: ${{ github.workspace }}/DeliveryIP_GitHub/dstoolkit/app/dist
          azure_static_web_apps_api_token: ${{ env.azswa_token }}
          skip_app_build: true
